{"version":3,"sources":["styles/container/TodoLists.ts","styles/components/TodoCounter.ts","styles/components/TodoSearch.ts","styles/components/TodoItem.ts","styles/components/CreateTodoButton.ts","styles/components/TodoList.ts","styles/components/ModalAddTodo.ts","components/TodoCounter.tsx","components/TodoSearch.tsx","components/TodoItem.tsx","components/CreateTodoButton.tsx","components/TodoList.tsx","components/Layout.tsx","components/ModalAddTodo.tsx","container/TodoLists.tsx","config/useLocalStorage.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","mainBox","display","flexDirection","maxWidth","width","margin","alignItems","index","title","color","fontWeight","fontSize","textAlign","marginTop","subtitle","marginBottom","input","colorIcon","notchedOutline","borderWidth","borderColor","theme","tasksBox","background","borderRadius","boxShadow","shadows","spacing","padding","contentText","wordBreak","completedTasks","textDecoration","hideItem","opacity","AddTasksButton","backgroundColor","boxList","cssOutlinedInput","titleModal","msgModal","buttonsBox","breakpoints","down","btnBox","cancelBtn","acceptBtn","errorText","TodoCounter","completed","total","classes","useStyleTodoCounter","className","TodoSearch","filter","changeFilter","props","useStyleTodoSearch","FormControl","variant","OutlinedInput","placeholder","onChange","value","target","endAdornment","InputAdornment","position","IconButton","onClick","edge","inputProps","maxLength","TodoItem","completeTasks","removeTasks","dragTask","text","useStyleTodoItem","ref","useRef","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","item","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","type","isDragging","drag","Grid","container","xs","data-handler-id","Checkbox","checked","justifyContent","aria-label","size","CreateTodoButton","event","useStyleCreateTodoButton","Button","TodoList","children","useStyleTodoList","Box","my","DndProvider","backend","isMobile","TouchBackend","HTML5Backend","Layout","CssBaseline","style","overflow","minHeight","ModalAddTodo","open","closeEvent","addTask","taskExist","useState","newTask","setNewTask","errorTask","setErrorTask","useStyleModalAddTodo","saveTask","e","preventDefault","setError","txt","setTimeout","Dialog","onClose","reason","DialogTitle","DialogContent","DialogContentText","onSubmit","TextField","InputProps","root","startAdornment","sm","fullWidth","disabled","TodoLists","itemName","initialValue","useEffect","localStorage","getItem","setItem","JSON","stringify","localStorageItem","parse","saveItem","newItem","stringifiedItem","getTodos","saveTodo","useStyleTodoLists","setFilter","setAddTask","todos","setTodos","moveCard","useCallback","dragCard","update","$splice","el","length","toLowerCase","includes","validateFilter","map","todosTmp","completeTask","indexArr","push","addNewTask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.a6aa2d18.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(\n  () => ({\n    mainBox: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxWidth: 500,\n      width: '90%',\n      margin: 'auto',\n      alignItems: 'center',\n    },\n  }),\n  { index: 1 },\n);\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(\n  () => ({\n    title: {\n      color: '#FFF',\n      fontWeight: 600,\n      fontSize: 28,\n      textAlign: 'center',\n      marginTop: 50,\n    },\n    subtitle: {\n      color: '#FFF',\n      fontWeight: 600,\n      textAlign: 'center',\n      marginTop: 25,\n      fontSize: 24,\n      marginBottom: 40,\n    },\n  }),\n  { index: 1 },\n);\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(\n  () => ({\n    input: {\n      color: '#FFF',\n      '&::': {\n        color: '#FFF',\n      },\n    },\n    colorIcon: {\n      color: '#FFF',\n    },\n    notchedOutline: {\n      borderWidth: '1px',\n      borderColor: '#FFF !important',\n    },\n  }),\n  { index: 1 },\n);\n\nexport default useStyles;\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles(\n  (theme: Theme) => ({\n    tasksBox: {\n      background: '#EEE',\n      borderRadius: 12,\n      boxShadow: theme.shadows[2],\n      margin: `${theme.spacing(2)}px 0px`,\n      padding: 14,\n    },\n    contentText: {\n      display: 'flex',\n      alignItems: 'center',\n      color: '#3d3d3d',\n      width: '100%',\n      wordBreak: 'break-word',\n    },\n    completedTasks: {\n      textDecoration: 'line-through',\n    },\n    hideItem: {\n      opacity: 0,\n    },\n  }),\n  { index: 1 },\n);\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(\n  () => ({\n    AddTasksButton: {\n      backgroundColor: '#A12568',\n      color: '#FFF',\n      fontWeight: 500,\n      marginBottom: 40,\n      '&:hover': {\n        backgroundColor: '#C3478A',\n      },\n    },\n  }),\n  { index: 1 },\n);\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(\n  () => ({\n    boxList: {\n      width: '100%',\n    },\n  }),\n  { index: 1 },\n);\n\nexport default useStyles;\n","import { makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles(\n  (theme: Theme) => ({\n    input: {\n      color: '#000',\n      marginBottom: 20,\n    },\n    colorIcon: {\n      color: '#FFF',\n    },\n    cssOutlinedInput: {\n      '&$cssFocused $notchedOutline': {\n        borderColor: '#FEC260 !important',\n      },\n    },\n    notchedOutline: {\n      borderWidth: '1px',\n      borderColor: '#000 !important',\n    },\n    titleModal: {\n      textAlign: 'center',\n    },\n    msgModal: {\n      textAlign: 'center',\n    },\n    buttonsBox: {\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column-reverse',\n      },\n    },\n    btnBox: {\n      color: '#FFF',\n      marginTop: 20,\n      marginBottom: 20,\n      [theme.breakpoints.down('xs')]: {\n        marginTop: 10,\n        marginBottom: 10,\n      },\n    },\n    cancelBtn: {\n      backgroundColor: '#A12568',\n      '&:hover': {\n        backgroundColor: '#C3478A',\n      },\n    },\n    acceptBtn: {\n      backgroundColor: '#3B185F',\n      '&:hover': {\n        backgroundColor: '#4C296F',\n      },\n    },\n    errorText: {\n      color: '#DD0000',\n      textAlign: 'center',\n      margin: '0px 0px 10px 0px',\n    },\n  }),\n  { index: 1 },\n);\n\nexport default useStyles;\n","import React from 'react';\nimport { useStyleTodoCounter } from 'styles';\n\ntype TodoCounterProps = {\n  completed?: number;\n  total?: number;\n};\n\nconst TodoCounter: React.FC<TodoCounterProps> = ({ completed = 0, total = 0 }) => {\n  const classes = useStyleTodoCounter();\n\n  return (\n    <>\n      <h1 className={classes.title}>Your Tasks</h1>\n      <h2 className={classes.subtitle}>\n        You have completed {completed} of {total} tasks\n      </h2>\n    </>\n  );\n};\n\nexport default TodoCounter;\n","import React from 'react';\nimport { FormControl, IconButton, InputAdornment, OutlinedInput } from '@material-ui/core';\nimport { useStyleTodoSearch } from 'styles';\nimport CloseIcon from '@material-ui/icons/Close';\n\ntype TodoSearchProps = {\n  filter: string;\n  // eslint-disable-next-line no-unused-vars\n  changeFilter: (txt: string) => void;\n};\n\nconst TodoSearch: React.FC<TodoSearchProps> = ({ filter, changeFilter, ...props }) => {\n  const classes = useStyleTodoSearch();\n  return (\n    <FormControl variant=\"outlined\">\n      <OutlinedInput\n        placeholder=\"Search...\"\n        onChange={({ target: { value } }) => changeFilter(value)}\n        value={filter}\n        endAdornment={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <InputAdornment position=\"end\">\n            <IconButton onClick={() => changeFilter('')} edge=\"end\">\n              <CloseIcon className={classes.colorIcon} />\n            </IconButton>\n          </InputAdornment>\n        }\n        classes={{\n          notchedOutline: classes.notchedOutline,\n        }}\n        inputProps={{\n          className: classes.input,\n          maxLength: 64,\n        }}\n        {...props}\n      />\n    </FormControl>\n  );\n};\n\nexport default TodoSearch;\n","import React, { useRef } from 'react';\nimport { Checkbox, Grid, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useDrag, useDrop, DropTargetMonitor } from 'react-dnd';\nimport { XYCoord } from 'dnd-core';\nimport { TodoItemProps } from 'types';\nimport { useStyleTodoItem } from 'styles';\n\nconst TodoItem: React.FC<TodoItemProps> = ({\n  completed,\n  completeTasks,\n  removeTasks,\n  dragTask,\n  index,\n  text = '',\n}) => {\n  const classes = useStyleTodoItem();\n  const ref = useRef<HTMLDivElement>(null);\n  const [{ handlerId }, drop] = useDrop({\n    accept: 'CARD',\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item: any, monitor: DropTargetMonitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n\n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n\n      // Get pixels to the top\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      dragTask(dragIndex, hoverIndex);\n\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    type: 'CARD',\n    item: () => ({ index }),\n    collect: (monitor: any) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  drag(drop(ref));\n\n  return (\n    <Grid\n      container\n      item\n      ref={ref}\n      xs={12}\n      className={`${classes.tasksBox} ${isDragging && classes.hideItem}`}\n      data-handler-id={handlerId}\n    >\n      <Grid container item xs={2}>\n        <Checkbox checked={completed} onChange={completeTasks} />\n      </Grid>\n      <Grid container item xs={8} justifyContent=\"center\">\n        <p className={`${classes.contentText} ${completed && classes.completedTasks}`}>{text}</p>\n      </Grid>\n      <Grid container item xs={2} justifyContent=\"flex-end\">\n        <IconButton aria-label=\"delete\" size=\"small\" onClick={removeTasks}>\n          <DeleteIcon fontSize=\"inherit\" />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { useStyleCreateTodoButton } from 'styles';\n\ntype createTodoButtonProps = {\n  event: () => void;\n};\n\nconst CreateTodoButton: React.FC<createTodoButtonProps> = ({ event, ...props }) => {\n  const classes = useStyleCreateTodoButton();\n\n  return (\n    <Button\n      onClick={event}\n      className={classes.AddTasksButton}\n      type=\"button\"\n      variant=\"contained\"\n      {...props}\n    >\n      Add Task\n    </Button>\n  );\n};\n\nexport default CreateTodoButton;\n","import React from 'react';\nimport { Grid, Box } from '@material-ui/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { TouchBackend } from 'react-dnd-touch-backend';\nimport { isMobile } from 'react-device-detect';\nimport { useStyleTodoList } from 'styles';\n\nconst TodoList: React.FC = ({ children }) => {\n  const classes = useStyleTodoList();\n\n  return (\n    <Box my={4} display=\"flex\" className={classes.boxList}>\n      <Grid container item xs={12}>\n        <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>{children}</DndProvider>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport { CssBaseline } from '@material-ui/core';\n\nconst Layout: React.FC<any> = ({ children, ...props }) => (\n  <>\n    <CssBaseline />\n    <main\n      style={{\n        position: 'relative',\n        overflow: 'hidden',\n        minHeight: '100vh',\n      }}\n      {...props}\n    >\n      {children}\n    </main>\n  </>\n);\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  InputAdornment,\n  Button,\n  TextField,\n} from '@material-ui/core';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { useStyleModalAddTodo } from 'styles';\n\ntype ModalProps = {\n  open: boolean;\n  closeEvent: () => void;\n  // eslint-disable-next-line no-unused-vars\n  addTask: (txt: string) => void;\n  // eslint-disable-next-line no-unused-vars\n  taskExist: (txt: string) => boolean;\n};\n\nconst ModalAddTodo: React.FC<ModalProps> = ({ open, closeEvent, addTask, taskExist, ...props }) => {\n  const [newTask, setNewTask] = useState('');\n  const [errorTask, setErrorTask] = useState('');\n\n  const classes = useStyleModalAddTodo();\n\n  const saveTask = (e: any): void => {\n    e.preventDefault();\n    if (taskExist(newTask)) {\n      addTask(newTask);\n      setNewTask('');\n      closeEvent();\n    } else {\n      setError('Task exist');\n    }\n  };\n\n  const setError = (txt: string): void => {\n    setErrorTask(txt);\n    setTimeout(() => {\n      setErrorTask('');\n    }, 3000);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={(event, reason) => {\n        if (reason === 'backdropClick') {\n          setNewTask('');\n          closeEvent();\n        }\n      }}\n      {...props}\n    >\n      <DialogTitle className={classes.titleModal}>Add Task</DialogTitle>\n      <DialogContent>\n        <DialogContentText className={classes.msgModal}>Add your new task</DialogContentText>\n        {errorTask !== '' && <p className={classes.errorText}>{errorTask}</p>}\n        <form onSubmit={saveTask}>\n          <TextField\n            placeholder=\"Task...\"\n            value={newTask}\n            variant=\"outlined\"\n            type=\"text\"\n            onChange={({ target: { value } }) => setNewTask(value)}\n            {...props}\n            InputProps={{\n              className: classes.input,\n              classes: {\n                root: classes.cssOutlinedInput,\n                notchedOutline: classes.notchedOutline,\n              },\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AssignmentTurnedInIcon />\n                </InputAdornment>\n              ),\n            }}\n            // eslint-disable-next-line\n            inputProps={{ maxLength: 64 }}\n          />\n          <Grid container item xs={12} justifyContent=\"space-around\" className={classes.buttonsBox}>\n            <Grid item container sm={5} xs={12} justifyContent=\"center\">\n              <Button\n                type=\"button\"\n                className={`${classes.cancelBtn} ${classes.btnBox}`}\n                fullWidth\n                onClick={() => {\n                  setNewTask('');\n                  closeEvent();\n                }}\n              >\n                Cancel\n              </Button>\n            </Grid>\n            <Grid item container sm={5} xs={12} justifyContent=\"center\">\n              <Button\n                type=\"submit\"\n                disabled={newTask === ''}\n                className={`${classes.acceptBtn} ${classes.btnBox}`}\n                onClick={saveTask}\n                fullWidth\n              >\n                Save\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default ModalAddTodo;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport update from 'immutability-helper';\nimport {\n  TodoCounter,\n  TodoSearch,\n  TodoItem,\n  CreateTodoButton,\n  TodoList,\n  Layout,\n  ModalAddTodo,\n} from 'components';\nimport { useStyleTodoLists } from 'styles';\nimport { TodoType } from 'types';\nimport { useLocalStorage } from '../config/useLocalStorage';\n\nconst TodoLists: React.FC = () => {\n  const { getItem: getTodos, saveItem: saveTodo } = useLocalStorage('TASKS', []);\n  const classes = useStyleTodoLists();\n  const [filter, setFilter] = useState('');\n  const [addTask, setAddTask] = useState(false);\n  const [todos, setTodos] = useState<TodoType[]>([]);\n\n  useEffect(() => {\n    if (getTodos()) {\n      setTodos(getTodos());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    saveTodo(todos);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [todos]);\n\n  const countCompletedTasks = (): number => {\n    const todosCompleted: TodoType[] = todos.filter((el: TodoType) => el.completed === true);\n    return todosCompleted.length;\n  };\n\n  const completeTask = (index: number): void => {\n    const todosTmp = [...todos];\n    todosTmp[index].completed = !todosTmp[index].completed;\n    setTodos(todosTmp);\n  };\n\n  const removeTasks = (index: number): void => {\n    const todosTmp = todos.filter((el: any, indexArr: number) => indexArr !== index);\n    setTodos(todosTmp);\n  };\n\n  const openModalCreateTodo = (): void => {\n    setAddTask(true);\n  };\n\n  // Validamos el tasks que no exista uno igual\n  const validateTask = (text: string): boolean => {\n    const todosTmp = todos.filter((el: TodoType) => el.text === text);\n\n    return todosTmp.length === 0;\n  };\n\n  const addNewTask = (text: string): void => {\n    const todosTmp = todos;\n    todosTmp.push({\n      text,\n      completed: false,\n    });\n    setTodos(todosTmp);\n    saveTodo(todosTmp);\n  };\n\n  const validateFilter = (text: string): boolean =>\n    filter === '' ? true : text.toLowerCase().includes(filter.toLowerCase());\n\n  const moveCard = useCallback(\n    (dragIndex: number, hoverIndex: number) => {\n      const dragCard = todos[dragIndex];\n      setTodos(\n        update(todos, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard],\n          ],\n        }),\n      );\n    },\n    [todos],\n  );\n\n  return (\n    <Layout className={classes.mainBox}>\n      <TodoCounter completed={countCompletedTasks()} total={todos.length} />\n      <TodoSearch filter={filter} changeFilter={(txt: string) => setFilter(txt)} />\n      <TodoList>\n        {todos\n          .filter(({ text }) => validateFilter(text))\n          .map((el: TodoType, index: number) => (\n            <TodoItem\n              key={el.text}\n              index={index}\n              text={el.text}\n              completed={el.completed}\n              completeTasks={() => completeTask(index)}\n              removeTasks={() => removeTasks(index)}\n              dragTask={moveCard}\n            />\n          ))}\n      </TodoList>\n      <CreateTodoButton event={openModalCreateTodo} />\n      <ModalAddTodo\n        open={addTask}\n        taskExist={validateTask}\n        closeEvent={() => setAddTask(false)}\n        addTask={(txt: string) => addNewTask(txt)}\n      />\n    </Layout>\n  );\n};\n\nexport default TodoLists;\n","// eslint-disable-next-line\nimport React, { useEffect, useState } from 'react';\n\nfunction useLocalStorage(itemName: string, initialValue: any) {\n  useEffect(() => {\n    const localStorageItem = localStorage.getItem(itemName);\n    if (!localStorageItem) {\n      localStorage.setItem(itemName, JSON.stringify(initialValue));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getItem = (): any => {\n    const localStorageItem = localStorage.getItem(itemName);\n    if (localStorageItem) {\n      return JSON.parse(localStorageItem);\n    }\n\n    return null;\n  };\n\n  const saveItem = (newItem: any): void => {\n    const stringifiedItem = JSON.stringify(newItem);\n    localStorage.setItem(itemName, stringifiedItem);\n  };\n\n  return {\n    getItem,\n    saveItem,\n  };\n}\n\nexport { useLocalStorage };\n","import React from 'react';\nimport { TodoLists } from './container';\n\nconst App: React.FC = () => <TodoLists />;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StylesProvider } from '@material-ui/core/styles';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StylesProvider injectFirst>\n      <App />\n    </StylesProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}